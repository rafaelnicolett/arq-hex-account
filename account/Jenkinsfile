#!groovy
pipeline {
    agent {
        any {
             label 'account-application'
             defaultContainer 'jnlp'
             yaml """
            apiVersion: v1
            kind: Pod
            metadata:
            labels:
              component: ci
            spec:
              # Use service account that can deploy to all namespaces
              serviceAccountName: cd-jenkins
              containers:
              - name: docker
                  image: docker:latest
                  command:
                  - cat
                  tty: true
                  volumeMounts:
                  - mountPath: /var/run/docker.sock
                    name: docker-sock
                volumes:
                  - name: docker-sock
                    hostPath:
                      path: /var/run/docker.sock
            """
        }
    }
    triggers {
        pollSCM '* * * * *'
    }
    tools {
        maven 'Maven'
        dockerTool 'docker'
    }
    stages {
        stage('Build') {
            steps {
                echo 'Start build pipeline'
                sh 'cd /var/jenkins_home/workspace/pipeline-java-account/account'
                sh 'mvn -f /var/jenkins_home/workspace/pipeline-java-account/account/pom.xml clean package'
                echo 'Finish build pipeline'
            }
        }
        stage('Build Docker image') {
            steps {
                container('docker') {
                    sh 'docker build -f /var/jenkins_home/workspace/pipeline-java-account/account/Dockerfile -t rafaelnicoleti/hexagonal-java-account:latest .'
                }
            }
        }
        stage('Push Docker image') {
            environment {
                DOCKER_HUB_LOGIN = credentials('dockerhub')
            }
            steps {
                sh 'docker login --username=$DOCKER_HUB_LOGIN_USR --password=$DOCKER_HUB_LOGIN_PSW'
                sh 'docker push rafaelnicoleti/hexagonal-java-account:latest'
            }
        }
    }
}